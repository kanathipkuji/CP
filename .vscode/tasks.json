{
    "version": "2.0.0",
    "tasks": [
      {
        "label": "build:debug",
        "type": "shell",
        "command": "clang++",
        "args": [
          "-std=c++20",
          "-Wall",
          "-Wextra",
          "-Wshadow",
          "-g",                        
          "-D_GLIBCXX_ASSERTIONS",
          "-DDEBUG",
          "-ferror-limit=2",
          "-o",
          "${workspaceFolder}/bin/${fileBasenameNoExtension}_debug",
          "${file}"
        ],
        "group": {
          "kind": "build",
          "isDefault": false
        },
        "problemMatcher": ["$gcc"]
      },
      {
        "label": "build:release",
        "type": "shell",
        "command": "clang++",
        "args": [
          "-std=c++20",
          "-Wall",
          "-Wextra",
          "-Wshadow",
          "-O2",                      
          "-DNDEBUG",                 
          "-o",
          "${workspaceFolder}/bin/${fileBasenameNoExtension}_release",
          "${file}"
        ],
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "problemMatcher": ["$gcc"]
      },
      {
        "label": "run:debug",
        "type": "shell",
        "command": "${workspaceFolder}/bin/${fileBasenameNoExtension}_debug",
        "dependsOn": "build:debug",
        "group": "test",
        "problemMatcher": []
      },
      {
        "label": "run:release",
        "type": "shell",
        "command": "${workspaceFolder}/bin/${fileBasenameNoExtension}_release",
        "dependsOn": "build:release",
        "group": "test",
        "problemMatcher": []
      },
      {
        "label": "run:release piped I/O",
        "type": "shell",
        "command": "${workspaceFolder}/bin/${fileBasenameNoExtension}_release < ${fileDirname}/${fileBasenameNoExtension}.in > ${fileDirname}/${fileBasenameNoExtension}.out",
        "dependsOn": "build:release",
        "group": "test",
        "options": {
          "shell": {
            "executable": "/bin/zsh",
            "args": ["-c"]
          }
        },
        "problemMatcher": []
      }
      
    ]
  }
  